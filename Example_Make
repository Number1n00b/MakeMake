CC=g++
CFLAGS=-std=c++11 -Wall -pedantic -g -ggdb -c

EXE_DIR=bin
TEST_DIR=bin/tests
OBJ_DIR=bin/obj

EXE_NAME=proj

INCLUDE_DIRS = # Empty for now

LIB_DIRS= # Empty for now
LINK_COMMANDS= # Empty for now

COMPILE_WITH_CFLAGS=$(CC) $(CFLAGS)
COMPILE_WITH_INCLUDES=$(CC) $(CFLAGS) $(INCLUDE_DIRS)

OBJ_FILES=\
	\
	$(OBJ_DIR)/main.o \
	\
	$(OBJ_DIR)/LinkedList.o \
	\
	$(OBJ_DIR)/MathUtil.o\
	$(OBJ_DIR)/Util.o

all: executable

executable: $(OBJ_FILES)
	$(CC) $(OBJ_FILES) -o $(EXE_DIR)/$(EXE_NAME) $(LIB_DIRS) $(LINK_COMMANDS)

# main
$(OBJ_DIR)/main.o: src/main/main.cpp src/main/main.h src/util/Util.h
	$(COMPILE_WITH_INCLUDES) src/main/main.cpp -o $(OBJ_DIR)/main.o

# model
$(OBJ_DIR)/LinkedList.o: src/model/containers/LinkedList.cpp src/model/containers/LinkedList.h
	$(COMPILE_WITH_CFLAGS) src/model/containers/LinkedList.cpp -o $(OBJ_DIR)/LinkedList.o

# util
$(OBJ_DIR)/MathUtil.o: src/util/MathUtil.cpp src/util/MathUtil.h
	$(COMPILE_WITH_INCLUDES) src/util/MathUtil.cpp -o $(OBJ_DIR)/MathUtil.o

$(OBJ_DIR)/Util.o: src/util/Util.cpp src/util/Util.h
	$(COMPILE_WITH_INCLUDES) src/util/Util.cpp -o $(OBJ_DIR)/Util.o


testLL: $(OBJ_DIR)/LinkedList.o tests/LinkedListTest.cpp
	$(COMPILE_WITH_CFLAGS) tests/LinkedListTest.cpp -c -o $(OBJ_DIR)/LinkedListTest.o
	$(CC) $(OBJ_DIR)/LinkedList.o $(OBJ_DIR)/LinkedListTest.o -o $(TEST_DIR)/LinkedListTest
	./$(TEST_DIR)/LinkedListTest


# Run stuff
.PHONY: run
run:
	./$(EXE_DIR)/$(EXE_NAME)

.PHONY: runVal
runVal:
	valgrind ./$(EXE_DIR)/$(EXE_NAME)

#Tests
.PHONY: runValTestLL
runValTestLL:
	valgrind ./$(TEST_DIR)/LinkedListTest

# Clean
.PHONY: clean
clean:
	rm -rf $(OBJ_DIR)/*.o $(EXE_DIR)/$(EXE_NAME) $(EXE_DIR)/*.dll $(TEST_DIR)/* *~*


# Memes
.PHONY: urn
urn:
	@echo "You don't know how to make an urn."


.PHONY: rum
rum:
	@echo "Why is the rum gone?!"


.PHONY: ruin
ruin:
	@echo "You ruined it! :("


.PHONY: riun
riun:
	@echo "Dam dude... can't even ruin it right. :\\"
