
:ENVIRONMENT:
# root dir is relative from where the script is executed (used for where the makefile should be created)
PROJ_ROOT_DIR=.
# src dir is relative to the root dir.
PROJ_SOURCE_DIR=src
:END_ENVIRONMENT:

:VARS:
# Format must conform to Makefile format, as these will be copied to the makefile.

CC=poop
CFLAGS=-std=c++11 -Wall -pedantic -g -ggdb -c

LINK_COMMANDS= # Empty :D
TEST_DIR=asdasdasd
OBJ_DIR=bin/obj
EXE_DIR=bin

EXE_NAME=the_program

:END_VARS:


# A list of test cases to include in the makefile.
# Format:
# Test Name (The output executable)
# File to be tested
# The test file (containing a main)
:TESTS:

testLL
src/model/containers/LinkedList.cpp
tests/LinkedListTest.cpp

:END_TESTS:





# Everything below :ALLWAYS: will be copied verbatim to the end of the makefile.
:ALLWAYS:

# Run stuff
.PHONY: run
run:
	./$(EXE_DIR)/$(EXE_NAME)

.PHONY: runVal
runVal:
	valgrind ./$(EXE_DIR)/$(EXE_NAME)

# THIS IS A TEST OF IF IT WORKS LOL
# Clean
.PHONY: clean
clean:
	rm -rf $(OBJ_DIR)/*.o $(EXE_DIR)/$(EXE_NAME) $(EXE_DIR)/*.dll $(TEST_DIR)/* *~*

test:
	echo LOL

# Memes
.PHONY: urn
urn:
	@echo "You don't know how to make an urn."


.PHONY: rum
rum:
	@echo "Why is the rum gone?!"


.PHONY: ruin
ruin:
	@echo "You ruined it! :("


.PHONY: riun
riun:
	@echo "Dam dude... can't even ruin it right. :\\"

:END_ALLWAYS:
